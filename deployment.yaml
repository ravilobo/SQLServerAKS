apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql-deployment
spec:
  replicas: 1             # > 1 doesn't make sense since the second pod will never 
  selector:               # be able to get an exclusive lock on the database files.
    matchLabels:
      app: mssql
  strategy:               # by default K8S employs a rolling-update process
    type: Recreate        # new Pods start accessing the db files, while old files still running 
  template:               # Since SQL Server needs exclusive lock on DB files, we drop old Pods and create new ones
    metadata:             # https://www.centinosystems.com/blog/sql/kubernetes-deployments-for-sql-server/
      labels:
        app: mssql
    spec:
      terminationGracePeriodSeconds: 10  # Time in seconds K8S waits after the SIGTERM signal has been issued 
      securityContext:
        fsGroup: 1000
      containers:
      - name: mssql
        image: mcr.microsoft.com/mssql/rhel/server:2019-latest
        env:
        - name: MSSQL_PID
          value: "Developer"
        - name: ACCEPT_EULA
          value: "Y"
        - name: MSSQL_SA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mssql-secret
              key: SA_PASSWORD 
        volumeMounts:
        - name: mssqldb
          mountPath: /var/opt/mssql
      volumes:
      - name: mssqldb
        persistentVolumeClaim:
          claimName: mssql-data
